import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:go_router/go_router.dart';
import 'package:team_tasan_tech/features/chat/application/providers/level_provider.dart';
import 'package:team_tasan_tech/features/home/domain/enum/themes.dart';
import 'package:team_tasan_tech/features/home/presentation/widgets/bottom_sheet_menu.dart';
import 'package:team_tasan_tech/features/home/presentation/widgets/scene_chip.dart';
import 'package:team_tasan_tech/routes/app_router.dart';

import '../../../../main.dart';
import '../../../../shared/widgets/app_bottom_sheet.dart';
import '../../../../shared/widgets/app_button.dart';
import '../../../../shared/widgets/app_divider.dart';
import '../../application/page_model/home_page_model.dart';
import '../../application/provider/home_page_notifier.dart';

class HomePage extends ConsumerWidget {
  const HomePage({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final homePageState = ref.watch(homePageStateProvider);
    final homePageStateNotifier = ref.watch(homePageStateProvider.notifier);
    final TestLevel testLevel = homePageState.level;
    final String appBarTitle;

    switch (testLevel) {
      case TestLevel.beginner:
        appBarTitle = 'ÂàùÁ¥ö„É¢„Éº„Éâ';
      case TestLevel.standard:
        appBarTitle = '‰∏≠Á¥ö„É¢„Éº„Éâ';
      case TestLevel.advanced:
        appBarTitle = '‰∏äÁ¥ö„É¢„Éº„Éâ';
    }

    return Scaffold(
      body: SafeArea(
        child: CustomScrollView(
          physics: const BouncingScrollPhysics(),
          slivers: [
            SliverAppBar(
              floating: false,
              toolbarHeight: $styles.dimens.appBarHeight,
              title: Text(appBarTitle),
              actions: [
                TextButton(
                  onPressed: () {
                    AppBottomSheet().showAppBottomSheet(
                      context: context,
                      physics: const NeverScrollableScrollPhysics(),
                      // showDrugHandle: true,
                      showCloseButton: true,
                      child: Padding(
                        padding: EdgeInsets.all($styles.insets.p16),
                        child: Align(
                          alignment: Alignment.centerLeft,
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.start,
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text(
                                '‰ºöË©±Ë®≠ÂÆö',
                                style: $styles.text.headlineMedium.copyWith(
                                    color: $styles.colors.textColors.primary),
                              ),
                              SizedBox(height: $styles.insets.p12),
                              BottomSheetMenu<TestMode>(
                                title: 'ÁâπÂÆö„ÅÆ„Éà„Éî„ÉÉ„ÇØ„ÅßÁ∑¥Áøí',
                                subtitle: '„Ç∑„Éº„É≥„ÇíÈÅ∏„Çì„ÅßÁâπÂÆö„ÅÆ„Éà„Éî„ÉÉ„ÇØ„Åß‰ºöË©±„ÇíÁ∑¥Áøí„Åô„Çã„ÄÇ',
                                value: TestMode.specificTopic,
                                onTap: (newValue) {
                                  homePageStateNotifier
                                      .updateTestMode(newValue);
                                },
                              ),
                              const AppDivider(),
                              BottomSheetMenu<TestMode>(
                                title: 'Ëá™Áî±„Å™„Éà„Éî„ÉÉ„ÇØ„Åß‰ºöË©±„Åô„Çã',
                                subtitle: '„ÉÜ„Éº„Éû„ÇíËá™Áî±„Å´Ë®≠ÂÆö„Åó„ÄÅ‰ºöË©±„ÇíÂßã„ÇÅ„Åæ„Åô„ÄÇ',
                                value: TestMode.freeTopic,
                                onTap: (newValue) {
                                  homePageStateNotifier
                                      .updateTestMode(newValue);
                                },
                              ),
                              SizedBox(height: $styles.insets.p8),
                            ],
                          ),
                        ),
                      ),
                    );
                  },
                  child: Row(
                    children: [
                      homePageState.testMode == TestMode.specificTopic
                          ? Text(
                              '„Ç´„ÉÜ„Ç¥„É™„Éº‰ºöË©±',
                              style: $styles.text.labelMedium.copyWith(
                                  color:
                                      $styles.colors.functionalColors.action),
                            )
                          : Text(
                              'Ëá™Áî±‰ºöË©±',
                              style: $styles.text.labelMedium.copyWith(
                                  color:
                                      $styles.colors.functionalColors.action),
                            ),
                      Icon(Icons.keyboard_arrow_down_rounded,
                          size: 16,
                          color: $styles.colors.functionalColors.action),
                    ],
                  ),
                ),
              ],
            ),
            SliverFillRemaining(
              hasScrollBody: false,
              child: Padding(
                padding: EdgeInsets.symmetric(horizontal: $styles.insets.p24),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    SizedBox(height: $styles.insets.p28),
                    Text(
                      '„Åì„Çì„Å´„Å°„ÅØÊ∞∏Áî∞„Åï„Çìüëã',
                      style: $styles.text.headlineMedium,
                    ),
                    SizedBox(height: $styles.insets.p4),
                    Text(
                      '‰ªäÊó•„ÅØ‰Ωï„ÅÆË©±„Çí„Åó„Åæ„Åó„Çá„ÅÜ„ÅãÔºü',
                      style: $styles.text.titleMediumBold
                          .copyWith(color: $styles.colors.textColors.tertiary),
                    ),
                    SizedBox(height: $styles.insets.p40),
                    // * „É¢„Éº„ÉâÂàá„ÇäÊõø„Åà
                    homePageState.testMode == TestMode.freeTopic
                        ? TextFormField(
                            controller:
                                homePageStateNotifier.themeInputController,
                            decoration: InputDecoration(
                              hintText: '‰æãÔºâÂÖ•ÂõΩÂØ©Êüª„ÅÆ‰ºöË©±',
                              hintStyle: $styles.text.titleMediumBold.copyWith(
                                  color:
                                      $styles.colors.functionalColors.inactive),
                            ),
                          )
                        : Wrap(
                            runSpacing: $styles.insets.p8,
                            spacing: $styles.insets.p8,
                            children: List.generate(
                              Themes.values.length,
                              (index) => SceneChip(
                                onTap: () {
                                  homePageStateNotifier.updateCurrentTopic(
                                    Themes.values[index],
                                  );
                                  homePageStateNotifier.settingConversation();
                                  context.pushNamed(Routes.chat.name);
                                },
                                title: Text(
                                  Themes.values[index].keyStringJp,
                                  style: $styles.text.labelMediumBold,
                                ),
                              ),
                            )),
                    SizedBox(height: $styles.insets.p8),
                    const Spacer(),
                    homePageState.testMode == TestMode.freeTopic
                        ? AppButton.solid(
                            label: '‰ºöË©±„ÇíÂßã„ÇÅ„Çã',
                            onTap: () {
                              homePageStateNotifier.settingConversation();
                              context.pushNamed(Routes.chat.name);
                            },
                          )
                        : const SizedBox.shrink(),
                    SizedBox(height: $styles.insets.p16),
                    AppButton.solid(
                      backgroundColor: $styles.colors.keyColor.tertiary,
                      labelColor: $styles.colors.keyColor.primary,
                      label: '„É¨„Éô„É´Â§âÊõ¥',
                      onTap: () {
                        AppBottomSheet().showAppBottomSheet(
                          context: context,
                          physics: const NeverScrollableScrollPhysics(),
                          // showDrugHandle: true,
                          showCloseButton: true,
                          child: Padding(
                            padding: EdgeInsets.all($styles.insets.p16),
                            child: Align(
                              alignment: Alignment.centerLeft,
                              child: Column(
                                mainAxisAlignment: MainAxisAlignment.start,
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    '„É¨„Éô„É´Ë®≠ÂÆö',
                                    style: $styles.text.headlineMedium.copyWith(
                                      color: $styles.colors.textColors.primary,
                                    ),
                                  ),
                                  SizedBox(height: $styles.insets.p2),
                                  Text(
                                    'AI„ÅÆ„ÉÜ„Çπ„Éà„É¨„Éô„É´„ÇíÈÅ∏Êäû',
                                    style: $styles.text.bodySmall,
                                  ),
                                  SizedBox(height: $styles.insets.p12),
                                  BottomSheetMenu<TestLevel>(
                                    title: 'ÂàùÁ¥ö„É¨„Éô„É´',
                                    value: TestLevel.beginner,
                                    onTap: (newValue) {
                                      homePageStateNotifier
                                          .updateLevel(newValue);
                                    },
                                  ),
                                  const AppDivider(),
                                  BottomSheetMenu<TestLevel>(
                                    title: '‰∏≠Á¥ö„É¨„Éô„É´',
                                    value: TestLevel.standard,
                                    onTap: (newValue) {
                                      homePageStateNotifier
                                          .updateLevel(newValue);
                                    },
                                  ),
                                  const AppDivider(),
                                  BottomSheetMenu<TestLevel>(
                                    title: '‰∏äÁ¥ö„É¨„Éô„É´',
                                    value: TestLevel.advanced,
                                    onTap: (newValue) {
                                      homePageStateNotifier
                                          .updateLevel(newValue);
                                    },
                                  ),
                                  const AppDivider(),
                                  SizedBox(height: $styles.insets.p8),
                                ],
                              ),
                            ),
                          ),
                        );
                      },
                    ),
                    SizedBox(height: $styles.insets.p24),
                  ],
                ),
              ),
            )
          ],
        ),
      ),
    );
  }
}
